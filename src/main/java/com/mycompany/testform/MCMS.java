/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.mycompany.testform;

import static com.mycompany.testform.formmain.bb;
import java.util.ArrayList;
import java.util.Map;
import javax.swing.table.DefaultTableModel;
import java.lang.String;

/**
 *
 * @author Administrator
 */
public class MCMS extends javax.swing.JFrame {

    /**
     * Creates new form MCMS
     */
    public MCMS() {
        initComponents();
        setDefaultCloseOperation(javax.swing.WindowConstants.HIDE_ON_CLOSE);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "STT", "Tọa độ X", "Tọa độ Y", "Số hướng", "Phạm vi"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jTable1);

        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Cảm biến số", "Hướng"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane2.setViewportView(jTable2);

        jLabel1.setText("Danh sách Sensor");

        jLabel2.setText("Sensor hoạt động");

        jButton1.setText("MCMS");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 102, Short.MAX_VALUE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 59, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 382, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 479, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(28, 28, 28)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(72, 72, 72)
                        .addComponent(jLabel1)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel2)
                        .addGap(155, 155, 155))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(54, 54, 54)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 33, Short.MAX_VALUE)
                        .addComponent(jButton1)
                        .addGap(28, 28, 28))))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    // bài kiểm tra TIS của target đang xét với sensor a đang có hướng là phần thứ n
    public static boolean tis(sensor a,int n,target x){

        //tạo vector ngang hướng sang phải
        vector xx = new vector(1,0);
        // tính góc giữa vik và vector xx
        float goc = (float) Math.acos(x.vik(a).tichvh(xx)/x.vik(a).tichdd(xx));
        // nếu target ở nửa dưới hình tròn thì tính lại góc bằng phần còn lại n
        if(a.getY()>x.getY())
            goc = (float) (2 * Math.PI)-goc;

        // kiểm tra xem vector vik có nằm trong góc phủ sóng hiện tại hay ko
        if(goc > n * a.phi() || goc < (n-1)*a.phi()){
            return false;
        }

        // kiểm tra xem mục tiêu x có nằm trong phạm vi phủ sóng hay không
        if(x.vik(a).dodai()>a.getRs()) {
            return false;
        }
        return true;
    }
    
    // tìm tất cả các mục tiêu dc bao phủ bởi cảm biến i có góc j
    public static ArrayList<target> timphiij(sensor i, int j, ArrayList<target> a){
        ArrayList<target> kq = new ArrayList<target>();
        for(int k=0;k<a.size();k++){
            if(tis(i,j,a.get(k))){
                kq.add(a.get(k));
            }
        }
        return kq;

    }

    // xay dung ma tran so luong target dc bao phu cua moi sensor voi moi huong
    public static ArrayList getF(ArrayList<sensor> ss, ArrayList<target> ds_target){
        ArrayList<ArrayList<Integer>> a = new ArrayList();
        ArrayList<Integer> xx = new ArrayList<Integer>();
        // duyệt tất cả các sensor
        for (int i=0;i<ss.size();i++){
            // duyệt tất cả các hướng
            for (int j=0;j<ss.get(i).getN();j++){
                int dem =0;
                // chạy TIS với tất cả các target
                for(int k=0;k<ds_target.size();k++){
                    if(tis(ss.get(i),j,ds_target.get(k))){
                        dem++;
                    }
                }
                xx.add(dem);
            }
            a.add(xx);
        }
        return a;
    }


    
     int dem =0;
    // thuat toan tham lam tap trung cga
    public String[][] cga(ArrayList<sensor> ds_sensor, ArrayList<target> ds_target){
        // tập hợp các cặp (nút hoạt động, định hướng) ở cuối thuật toán là kết quả của CGA
        String[][] z = new String [5][2];
      //  int dem =0;
        // các mục tiêu chưa được bao phủ
        ArrayList<target> v = ds_target;
        // các sensor không hoạt
        ArrayList<sensor> y = ds_sensor;
        while (true){
            if(v.isEmpty() || y.isEmpty()){
                break;
            }
            ArrayList<ArrayList<Integer>> a = getF(y,v);
            int max = 0;
            sensor index_sensor = new sensor();
            int index_huong =0;
            for(int i=0;i<y.size();i++){
                for(Integer j=0;j<y.get(i).getN();j++){
                    if(timphiij(y.get(i),j,v).size()>max){
                        max = timphiij(y.get(i),j,v).size();
                        index_sensor = y.get(i);
                        index_huong = j;
                    }
                }
            }
            if(max==0){
                break;
            }
            else {
                // them ij vao z
          
                z[dem][0] = String.valueOf(index_sensor.tk(ds_sensor));
                z[dem][1] =  String.valueOf(index_huong+1);
                dem++;

                // xoa phi ij ra khoi v
                for(int j=0;j<max;j++){
                    ArrayList <target> daphathien = new ArrayList<target>();
                    daphathien = timphiij(index_sensor,index_huong,v);
                    for(int k=0;k<daphathien.size();k++){
                        v.remove(daphathien.get(k));
                    }
                }
                // xoa cam bien i ra khoi y
                y.remove(index_sensor);
            }

        }
        return z;

    }
    
    
    
    
    public String [][] getData2(){
        String [][] data2 = new String [5][5];
        for(int i=0;i<5;i++){
            data2[i][0] = String.valueOf( i+1);
            data2[i][1] = String.valueOf( bb.get(i).getX());
            data2[i][2] = String.valueOf( bb.get(i).getY());
            data2[i][3] = String.valueOf( bb.get(i).getN());
            data2[i][4] = String.valueOf( bb.get(i).getRs());
        }
        return data2;
    }
    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        // TODO add your handling code here:
        String dt2 [][] = getData2();
        
        DefaultTableModel model2 = new DefaultTableModel();
                model2.addColumn("STT");
                model2.addColumn("Tọa độ X");
                model2.addColumn("Tọa độ Y");
                model2.addColumn("Số hướng");
                model2.addColumn("Phạm vi");


                for(int i=0;i<5;i++){
                    model2.addRow(dt2[i]);
                }
                        
                
                jTable1.setModel(model2);
    }//GEN-LAST:event_formWindowOpened

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        String[][] z = cga(formmain.bb,formmain.aa); 
        DefaultTableModel model1 = new DefaultTableModel();
                model1.addColumn("STT");
                model1.addColumn("Tọa độ X");
               

                for(int i=0;i<dem;i++){
                    model1.addRow(z[i]);
                }
                        
                
                jTable2.setModel(model1);
        
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable2;
    // End of variables declaration//GEN-END:variables
}
